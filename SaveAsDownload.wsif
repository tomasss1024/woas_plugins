wsif.version: 1.3.1
wsif.generator: woas
wsif.generator.version: 0.12.0
woas.author:  tomas
woas.pages: 2

--DFQRCTsKlU
woas.page.title: WoaS::Plugins::SaveAsDownload
woas.page.attributes: 0
woas.page.encoding: 8bit/plain
woas.page.disposition: inline
woas.page.boundary: DFQRCTsKlU

--DFQRCTsKlU
/* SaveAsDownload plugin 
 * https://github.com/tomasss1024/woas_plugins
 * Tomas
 */
woas.SaveAsFile = function(filePath,save_mode,content) {
/*
	if (save_mode !== this.file_mode.ASCII_TEXT && save_mode !== this.file_mode.UTF8_TEXT) {
		woas.log("Only ASCII and UTF8 file modes are currently supported with TiddlySaver");	//log:1
		return null;
	}
	var ts = this.tiddlySaver, msg, r = null;
	try {
		ts.saveFile(filePath, save_mode === this.file_mode.ASCII_TEXT ?
			"" : "UTF-8", content);
		r = true;
	} catch(e) {
		r = this.javaError({fullPath: filePath});
	}
	return r;
	*/
    var filename=filePath.split(/[\\/]/).pop();
    //var file = new Blob([content], {type: "text/html"}),
    //    url = URL.createObjectURL(file);
    if (window.navigator.msSaveOrOpenBlob) // IE10+
        window.navigator.msSaveOrOpenBlob(file, filename);
    else { // Others
        var link = document.createElement("a");
	if(Blob !== undefined) {
		var blob = new Blob([content], {type: "text/html"});
		link.setAttribute("href", URL.createObjectURL(blob));
	} else {
		link.setAttribute("href","data:text/html," + encodeURIComponent(content));
	}        
        //a.href = url;
        //a.download = filename;
        link.setAttribute("download",filename);
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        /*
        setTimeout(function() {
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);  
        }, 0); 
        */
    }
	return true;
};

woas.save_file = function(fileUrl, save_mode, content, no_msg) {
	var r = null, file;
	if (true) {
		r = this.SaveAsFile(fileUrl, save_mode, content);
                r=true;
	}
	if (this.browser.ie) {
		r = this.ieSaveFile(fileUrl, save_mode, content);
	}
	// needs to be before Firefox in case FF > v16 and no plugins but Java
	else if (this.tiddlySaver) {
		r = this.javaSaveFile(fileUrl, save_mode, content);
	}
	else if (this.browser.firefox) {
		// avoid content copying; other functions will be updated later
// FIX: needs to use new file object
		file = { fullPath:fileUrl, mode:save_mode, str:content };
		r = this.mozillaSaveFile(file);
	}
	else{
		r=this.SaveAsFile(fileUrl, save_mode, content);
	}
	if (r === null && !no_msg) {
		this.alert('Could not save "'+fileUrl+'"'+r);
// during testing
//woas.log('Could not save "'+fileUrl+'"');
	}
	return r
};
--DFQRCTsKlU
